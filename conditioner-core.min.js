/* conditioner-core 2.3.1 */
!function(n,t){if("function"==typeof define&&define.amd)define(["exports"],t);else if("undefined"!=typeof exports)t(exports);else{var e={};t(e),n.conditioner=e}}(this,function(n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var u=function(n,t){if(Array.isArray(n))return n;if(Symbol.iterator in Object(n))return function(n,t){var e=[],r=!0,o=!1,u=void 0;try{for(var i,c=n[Symbol.iterator]();!(r=(i=c.next()).done)&&(e.push(i.value),!t||e.length!==t);r=!0);}catch(n){o=!0,u=n}finally{try{!r&&c.return&&c.return()}finally{if(o)throw u}}return e}(n,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function i(n){if(Array.isArray(n)){for(var t=0,e=Array(n.length);t<n.length;t++)e[t]=n[t];return e}return Array.from(n)}function c(n){var t=n.match(a),e=u(t,5),r=e[1],o=e[2];return[e[3],function(n){return void 0===n||"true"===n||"false"!==n&&n}(e[4]),"not"===o,"was"===r]}function t(n){var t=function(t){var n=s("moduleGetName",t),e=d("moduleSetName",n),r={destruct:null,mounting:!1},o={alias:n,name:e,element:t,mounted:!1,unmount:function(){r.destruct&&o.mounted&&(l("moduleWillUnmount",o),r.destruct(),o.mounted=!1,l("moduleDidUnmount",o),o.onunmount.apply(t))},mount:function(){return o.mounted||r.mounting?Promise.resolve():(l("moduleWillMount",o),s("moduleImport",e).catch(function(n){throw r.mounting=!1,l("moduleDidCatch",n,o),o.onmounterror.apply(t,[n,o]),new Error("Conditioner: "+n)}).then(function(n){return r.destruct=s("moduleGetDestructor",s("moduleGetConstructor",n).apply(void 0,i(s("moduleSetConstructorArguments",e,t)))),o.mounted=!0,r.mounting=!1,l("moduleDidMount",o),o.onmount.apply(t,[o]),o}))},onmounterror:function(){},onmount:function(){},onunmount:function(){},destroy:function(){}};return o}(n),e=s("moduleGetContext",n);return e?Promise.resolve(function(n,t){var e=r(n,t.element);return e.onchange=function(n){return n?t.mount():t.unmount()},e.start(),t}(e,t)):t.mount()}var a=/(was)? ?(not)? ?@([a-z]+) ?(.*)?/,f=/(?:was )?(?:not )?@[a-z]+ ?.*?(?:(?= and (?:was )?(?:not )?@[a-z])|$)/g,r=n.monitor=function(n,t){var e={matches:!1,active:!1,onchange:function(){},start:function(){e.active||(e.active=!0,r.forEach(function(n){return n.forEach(function(n){return n.addListener(o)})}),o())},stop:function(){e.active=!1,r.forEach(function(n){return n.forEach(function(n){n.removeListener&&n.removeListener(o)})})},destroy:function(){e.stop(),r.length=0}},r=n.split(" or ").map(function(n){return function(n){return n.match(f).map(c)}(n).map(function(n){return function(n,t,e){return n.invert=t,n.retain=e,n.matched=!1,n}.apply(void 0,[function(n,t,e){return m("monitor").find(function(n){return n.name===t}).create(e,n)}.apply(void 0,[t].concat(i(n)))].concat(i(n.splice(2))))})}),o=function(){var n=r.reduce(function(n,t){return!!n||function(n){return n.reduce(function(n,t){if(!n)return!1;var e=t.invert?!t.matches:t.matches;return e&&(t.matched=!0),!(!t.retain||!t.matched)||e},!0)}(t)},!1);e.matches=n,e.onchange(n)};return e},e=(n.hydrate=function(n){return Promise.all([].concat(i(s("moduleSelector",n))).map(t))},[]),o=n.addPlugin=function(n){return e.push(n)},m=function(t){return e.filter(function(n){return function(n,t){return-1<n.indexOf(t)}(Object.keys(n),t)}).map(function(n){return n[t]})},l=function(n){for(var t=arguments.length,e=Array(1<t?t-1:0),r=1;r<t;r++)e[r-1]=arguments[r];return m(n).forEach(function(n){return n.apply(void 0,e)})},d=function(n){for(var t=arguments.length,e=Array(1<t?t-1:0),r=1;r<t;r++)e[r-1]=arguments[r];return m(n).reduce(function(n,t){return[t.apply(void 0,i(n))]},e).shift()},s=function(n){for(var t=arguments.length,e=Array(1<t?t-1:0),r=1;r<t;r++)e[r-1]=arguments[r];return m(n).pop().apply(void 0,e)};o({moduleSelector:function(n){return n.querySelectorAll("[data-module]")},moduleGetContext:function(n){return n.dataset.context},moduleImport:function(e){return new Promise(function(n,t){if(self[e])return n(self[e])})},moduleGetConstructor:function(n){return n},moduleGetDestructor:function(n){return n},moduleSetConstructorArguments:function(n,t){return[t]},moduleGetName:function(n){return n.dataset.module},monitor:{name:"media",create:function(n){return self.matchMedia(n)}}})});